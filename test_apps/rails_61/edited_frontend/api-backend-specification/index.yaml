---
openapi: 3.0.1
tags:
- name: lobanov
  description: Generated by Lobanov
servers:
- name: 3commas.io
  description: production server
info:
  title: Test fruits API for Lobanov development
  description: API which is used to develop Lobanov gem.
  version: 0.0.1
  contact: 3commas.io
paths:
  "/fruits/{fruit_id}/reviews/{id}":
    get:
      description: GET /fruits/:fruit_id/reviews/:id
      operationId: FruitsReviewsShow
      responses:
        '200':
          description: GET /fruits/:fruit_id/reviews/:id -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsReviewsShow20Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: fruit_id
        description: fruit_id
        schema:
          type: string
        required: true
        example: '1'
      - in: path
        name: id
        description: id
        schema:
          type: string
        required: true
        example: '1'
      summary: How do you name me?
  "/fruits/{fruit_id}/reviews":
    get:
      description: GET /fruits/:fruit_id/reviews
      operationId: FruitsReviewsIndex
      responses:
        '200':
          description: GET /fruits/:fruit_id/reviews -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsReviewsIndex200Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: fruit_id
        description: fruit_id
        schema:
          type: string
        required: true
        example: '1'
    post:
      description: POST /fruits/:fruit_id/reviews
      operationId: FruitsReviewsCreate
      responses:
        '201':
          description: POST /fruits/:fruit_id/reviews -> 201
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsReviewsCreate201Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: fruit_id
        description: fruit_id
        schema:
          type: string
        required: true
        example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "./components/requestBodies/FruitsReviewsCreateRequestBody.yaml"
  "/fruits/{fruit_id}/reviews/stats":
    get:
      description: GET /fruits/:fruit_id/reviews/stats
      operationId: FruitsReviewsStats
      responses:
        '200':
          description: GET /fruits/:fruit_id/reviews/stats -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsReviewsStats200Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: fruit_id
        description: fruit_id
        schema:
          type: string
        required: true
        example: '1'
  "/fruits":
    get:
      description: GET /fruits
      operationId: FruitsIndex
      responses:
        '200':
          description: GET /fruits -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsIndex200Response.yaml"
      tags:
      - lobanov
    post:
      description: POST /fruits
      operationId: FruitsCreate
      responses:
        '201':
          description: POST /fruits -> 201
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsCreate201Response.yaml"
        '400':
          description: POST /fruits -> 400
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsCreate400Response.yaml"
      tags:
      - lobanov
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "./components/requestBodies/FruitsCreateRequestBody.yaml"
  "/fruits/{id}":
    put:
      description: PUT /fruits/:id
      operationId: FruitsUpdate
      responses:
        '200':
          description: PUT /fruits/:id -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsUpdate200Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: id
        description: id
        schema:
          type: string
        required: true
        example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "./components/requestBodies/FruitsUpdateRequestBody.yaml"
    delete:
      description: DELETE /fruits/:id
      operationId: FruitsDestroy
      responses:
        '200':
          description: DELETE /fruits/:id -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsDestroy200Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: id
        description: id
        schema:
          type: string
        required: true
        example: '1'
    get:
      description: GET /fruits/:id
      operationId: FruitsShow
      responses:
        '200':
          description: GET /fruits/:id -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsShow200Response.yaml"
        '401':
          description: GET /fruits/:id -> 401
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsShow401Response.yaml"
        '404':
          description: GET /fruits/:id -> 404
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsShow404Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: id
        description: id
        schema:
          type: string
        required: true
        example: '2'
      - in: query
        name: q
        description: q
        schema:
          type: string
        required: true
        example: 'true'
  "/fruits/{id}/upvote":
    post:
      description: POST /fruits/:id/upvote
      operationId: FruitsUpvote
      responses:
        '201':
          description: POST /fruits/:id/upvote -> 201
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsUpvote201Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: id
        description: id
        schema:
          type: string
        required: true
        example: '5'
  "/wapi/fruits/{fruit_id}/reviews/{id}":
    get:
      description: GET /fruits/:fruit_id/reviews/:id
      operationId: FruitsReviewsShow
      responses:
        '200':
          description: GET /fruits/:fruit_id/reviews/:id -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsReviewsShow200Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: fruit_id
        description: fruit_id
        schema:
          type: string
        required: true
        example: '1'
      - in: path
        name: id
        description: id
        schema:
          type: string
        required: true
        example: '1'
  "/wapi/fruits/{fruit_id}/reviews":
    get:
      description: GET /fruits/:fruit_id/reviews
      operationId: FruitsReviewsIndex
      responses:
        '200':
          description: GET /fruits/:fruit_id/reviews -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsReviewsIndex200Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: fruit_id
        description: fruit_id
        schema:
          type: string
        required: true
        example: '1'
    post:
      description: POST /fruits/:fruit_id/reviews
      operationId: FruitsReviewsCreate
      responses:
        '201':
          description: POST /fruits/:fruit_id/reviews -> 201
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsReviewsCreate201Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: fruit_id
        description: fruit_id
        schema:
          type: string
        required: true
        example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "./components/requestBodies/FruitsReviewsCreateRequestBody.yaml"
  "/wapi/fruits/{fruit_id}/reviews/stats":
    get:
      description: GET /fruits/:fruit_id/reviews/stats
      operationId: FruitsReviewsStats
      responses:
        '200':
          description: GET /fruits/:fruit_id/reviews/stats -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsReviewsStats200Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: fruit_id
        description: fruit_id
        schema:
          type: string
        required: true
        example: '1'
  "/wapi/fruits":
    get:
      description: GET /fruits
      operationId: FruitsIndex
      responses:
        '200':
          description: GET /fruits -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsIndex200Response.yaml"
      tags:
      - lobanov
    post:
      description: POST /fruits
      operationId: FruitsCreate
      responses:
        '201':
          description: POST /fruits -> 201
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsCreate201Response.yaml"
        '400':
          description: POST /fruits -> 400
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsCreate400Response.yaml"
      tags:
      - lobanov
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "./components/requestBodies/FruitsCreateRequestBody.yaml"
  "/wapi/fruits/{id}":
    put:
      description: PUT /fruits/:id
      operationId: FruitsUpdate
      responses:
        '200':
          description: PUT /fruits/:id -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsUpdate200Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: id
        description: id
        schema:
          type: string
        required: true
        example: '1'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "./components/requestBodies/FruitsUpdateRequestBody.yaml"
    delete:
      description: DELETE /fruits/:id
      operationId: FruitsDestroy
      responses:
        '200':
          description: DELETE /fruits/:id -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsDestroy200Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: id
        description: id
        schema:
          type: string
        required: true
        example: '1'
    get:
      description: GET /fruits/:id
      operationId: FruitsShow
      responses:
        '404':
          description: GET /fruits/:id -> 404
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsShow404Response.yaml"
        '401':
          description: GET /fruits/:id -> 401
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsShow401Response.yaml"
        '200':
          description: GET /fruits/:id -> 200
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsShow200Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: id
        description: id
        schema:
          type: string
        required: true
        example: '2'
      - in: query
        name: q
        description: q
        schema:
          type: string
        required: true
        example: with_integer_name
  "/wapi/fruits/{id}/upvote":
    post:
      description: POST /fruits/:id/upvote
      operationId: FruitsUpvote
      responses:
        '201':
          description: POST /fruits/:id/upvote -> 201
          content:
            application/json:
              schema:
                "$ref": "./components/responses/FruitsUpvote201Response.yaml"
      tags:
      - lobanov
      parameters:
      - in: path
        name: id
        description: id
        schema:
          type: string
        required: true
        example: '5'
